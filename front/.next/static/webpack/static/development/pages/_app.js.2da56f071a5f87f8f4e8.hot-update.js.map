{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.2da56f071a5f87f8f4e8.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js","webpack:///./pages/_app.js"],"sourcesContent":["import _Object$assign from \"../../core-js/object/assign\";\nexport default function _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import React from 'react';\r\nimport Head from 'next/head';\r\nimport PropTypes from 'prop-types';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport withReduxSaga from 'next-redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport AppLayout from '../components/AppLayout';\r\nimport reducer from '../reducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga  from '../sagas';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nconst Restropect = ({ Component, store, pageProps }) => {\r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n        <Head>\r\n          <title>restropect</title>\r\n          <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.25.3/antd.css\" />\r\n        </Head>\r\n        <AppLayout>\r\n          <Component {...pageProps}/>\r\n        </AppLayout>\r\n      </Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nRestropect.propTypes = {\r\n  Component: PropTypes.elementType,\r\n  store: PropTypes.object,\r\n};\r\n\r\n\r\nRestropect.getInitialProps = async (context) => {\r\n  const { ctx, Component } = context;\r\n  const pageProps = {};\r\n  const dispatch = useDispatch();\r\n  const state = ctx.store.getState();\r\n  const cookie = ctx.isServer ? ctx.req.headers.cookie : '';\r\n  if (ctx.isServer) {\r\n    axios.defaults.headers.Cookie = cookie\r\n  }\r\n  if (!state.user.userId) {\r\n    context.store.dispatch({\r\n      type: LOAD_USER_REQUEST,\r\n    });\r\n  }\r\n  if (Component.getIntialProps) {\r\n    pageProps = await Component.getInitialProps(ctx);\r\n  }\r\n  return pageProps;\r\n}\r\n\r\nconst configureStore = (initialState) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware];\r\n  const enhancer = compose(composeWithDevTools(applyMiddleware(...middlewares)));\r\n  const store = createStore(reducer, initialState, enhancer);\r\n  store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n\r\n\r\nexport default withRedux(configureStore)(withReduxSaga(Restropect));"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAdA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAeA;AACA;AAhBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}