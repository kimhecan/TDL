{"ast":null,"code":"import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS } from '../reducer/post';\n\nfunction addPostAPI(postData) {\n  return axios.post('/post/', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeEvery(ADD_POST_REQUEST, addPost);\n}\n\nfunction loadPostAPI() {\n  return axios.get(`/post/`, {\n    withCredentials: true\n  });\n}\n\nfunction* loadPost() {\n  try {\n    const result = yield call(loadPostAPI);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {}\n}\n\nfunction* watchLoadPost() {\n  yield takeEvery(LOAD_POST_REQUEST, loadPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchLoadPost)]);\n}","map":{"version":3,"sources":["C:/Users/82103/Desktop/retrospect/front/sagas/post.js"],"names":["all","fork","put","takeEvery","call","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","addPostAPI","postData","post","withCredentials","addPost","action","result","type","data","e","console","error","watchAddPost","loadPostAPI","get","loadPost","watchLoadPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,EAAoCC,IAApC,QAAgD,oBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,EAA+DC,iBAA/D,EAAkFC,iBAAlF,QAA2G,iBAA3G;;AAGA,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC5B,SAAOP,KAAK,CAACQ,IAAN,CAAW,QAAX,EAAqBD,QAArB,EAA+B;AACpCE,IAAAA,eAAe,EAAE;AADmB,GAA/B,CAAP;AAGD;;AAED,UAAWC,OAAX,CAAmBC,MAAnB,EAA2B;AACzB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMb,IAAI,CAACO,UAAD,EAAaK,MAAb,CAAzB;AACA,UAAMd,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEX,gBADE;AAERY,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMlB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEV,gBADE;AAERc,MAAAA,KAAK,EAAEF;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUG,YAAV,GAAyB;AACvB,QAAMpB,SAAS,CAACG,gBAAD,EAAmBS,OAAnB,CAAf;AACD;;AAGD,SAASS,WAAT,GAAuB;AACrB,SAAOnB,KAAK,CAACoB,GAAN,CAAW,QAAX,EAAoB;AACzBX,IAAAA,eAAe,EAAE;AADQ,GAApB,CAAP;AAGD;;AAGD,UAAUY,QAAV,GAAqB;AACnB,MAAI;AACF,UAAMT,MAAM,GAAG,MAAMb,IAAI,CAACoB,WAAD,CAAzB;AACA,UAAMtB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAER,iBADE;AAERS,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOG,KAAP,EAAc,CAEf;AACF;;AAED,UAAUK,aAAV,GAA0B;AACxB,QAAMxB,SAAS,CAACM,iBAAD,EAAoBiB,QAApB,CAAf;AACD;;AAGD,eAAe,UAAUE,QAAV,GAAqB;AAClC,QAAM5B,GAAG,CAAC,CACRC,IAAI,CAACsB,YAAD,CADI,EAERtB,IAAI,CAAC0B,aAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS } from '../reducer/post';\r\n\r\n\r\nfunction addPostAPI(postData) {\r\n  return axios.post('/post/', postData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction * addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: e\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeEvery(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\n\r\nfunction loadPostAPI() {\r\n  return axios.get(`/post/`, {\r\n    withCredentials: true,\r\n  })\r\n}\r\n\r\n\r\nfunction* loadPost() {\r\n  try {\r\n    const result = yield call(loadPostAPI);\r\n    yield put({\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data\r\n    })\r\n  } catch (error) {\r\n    \r\n  }\r\n}\r\n\r\nfunction* watchLoadPost() {\r\n  yield takeEvery(LOAD_POST_REQUEST, loadPost);\r\n}\r\n\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchLoadPost),\r\n  ])\r\n}"]},"metadata":{},"sourceType":"module"}