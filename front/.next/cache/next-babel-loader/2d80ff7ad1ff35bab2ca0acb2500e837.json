{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUp),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignUp),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, delay, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducer/user';\n\nfunction signUpAPI(signUpData) {\n  console.log(signUpData);\n  return axios.post('/user/', signUpData);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            // put은 dispatch 동일\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context.t0);\n          _context.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(123);\n          _context2.next = 3;\n          return takeEvery(SIGN_UP_REQUEST, signUp);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([//fork(watchLogin),\n          fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/82103/Desktop/retrospect/front/sagas/user.js"],"names":["signUp","watchSignUp","userSaga","all","delay","fork","put","takeEvery","axios","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","signUpAPI","signUpData","console","log","post","action","call","data","type","error"],"mappings":";;;;yBAUUA,M;;;yBAeAC,W;;;yBAKeC,Q;;AA9BzB,SAASC,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,SAAhC,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,eAA3C,QAAkE,iBAAlE;;AAGA,SAASC,SAAT,CAAmBC,UAAnB,EAA+B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,SAAOL,KAAK,CAACQ,IAAN,CAAW,QAAX,EAAqBH,UAArB,CAAP;AACD;;AAED,SAAUb,MAAV,CAAiBiB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMC,IAAI,CAACN,SAAD,EAAYK,MAAM,CAACE,IAAnB,CAAV;;AAFJ;AAAA;AAGI,iBAAMb,GAAG,CAAG;AAAE;AACZc,YAAAA,IAAI,EAAEV;AADI,WAAH,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMgB;AACZI,UAAAA,OAAO,CAACO,KAAR;AAPJ;AAQI,iBAAMf,GAAG,CAAC;AACRc,YAAAA,IAAI,EAAET,eADE;AAERU,YAAAA,KAAK;AAFG,WAAD,CAAT;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAAUpB,WAAV;AAAA;AAAA;AAAA;AAAA;AACEa,UAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AADF;AAEE,iBAAMR,SAAS,CAACE,eAAD,EAAkBT,MAAlB,CAAf;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CACR;AACAE,UAAAA,IAAI,CAACJ,WAAD,CAFI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, delay, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducer/user'\r\n\r\n\r\nfunction signUpAPI(signUpData) {\r\n  console.log(signUpData);\r\n  return axios.post('/user/', signUpData);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    yield call(signUpAPI, action.data);\r\n    yield put  ({ // put은 dispatch 동일\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (e) { // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  console.log(123);\r\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    //fork(watchLogin),\r\n    fork(watchSignUp),\r\n  ]);\r\n}"]},"metadata":{},"sourceType":"module"}