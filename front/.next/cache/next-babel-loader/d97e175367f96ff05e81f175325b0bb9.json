{"ast":null,"code":"import { all, delay, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction signUpAPI(signUpData) {\n  return axios.post('/user/login', signUpData);\n}\n\nfunction* signUp(action) {\n  try {\n    yield call(signUpAPI, action.data);\n    yield put({\n      // put은 dispatch 동일\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  console.log(123);\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([//fork(watchLogin),\n  fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/82103/Desktop/retrospect/front/sagas/user.js"],"names":["all","delay","fork","put","takeEvery","axios","signUpAPI","signUpData","post","signUp","action","call","data","type","SIGN_UP_SUCCESS","e","console","error","SIGN_UP_FAILURE","watchSignUp","log","SIGN_UP_REQUEST","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,SAAhC,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,SAAT,CAAmBC,UAAnB,EAA+B;AAC7B,SAAOF,KAAK,CAACG,IAAN,CAAW,aAAX,EAA0BD,UAA1B,CAAP;AACD;;AAED,UAAUE,MAAV,CAAiBC,MAAjB,EAAyB;AACvB,MAAI;AACF,UAAMC,IAAI,CAACL,SAAD,EAAYI,MAAM,CAACE,IAAnB,CAAV;AACA,UAAMT,GAAG,CAAG;AAAE;AACZU,MAAAA,IAAI,EAAEC;AADI,KAAH,CAAT;AAGD,GALD,CAKE,OAAOC,CAAP,EAAU;AAAE;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMZ,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEK,eADE;AAERD,MAAAA,KAAK,EAAEF;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUI,WAAV,GAAwB;AACtBH,EAAAA,OAAO,CAACI,GAAR,CAAY,GAAZ;AACA,QAAMhB,SAAS,CAACiB,eAAD,EAAkBZ,MAAlB,CAAf;AACD;;AAED,eAAe,UAAUa,QAAV,GAAqB;AAClC,QAAMtB,GAAG,CAAC,CACR;AACAE,EAAAA,IAAI,CAACiB,WAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { all, delay, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction signUpAPI(signUpData) {\r\n  return axios.post('/user/login', signUpData);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    yield call(signUpAPI, action.data);\r\n    yield put  ({ // put은 dispatch 동일\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (e) { // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  console.log(123);\r\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    //fork(watchLogin),\r\n    fork(watchSignUp),\r\n  ]);\r\n}"]},"metadata":{},"sourceType":"module"}