{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUp),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignUp),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logIn),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogin),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducer/user';\n\nfunction signUpAPI(signUpData) {\n  console.log(signUpData);\n  return axios.post('/user/signup', signUpData);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log(action.data, 'action.data');\n          _context.next = 4;\n          return call(signUpAPI, action.data);\n\n        case 4:\n          _context.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction logInAPI(LoginData) {\n  return axios.post('/user/login', LoginData, {\n    withCredentials: true\n  });\n}\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(logInAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchLogin), fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Users/82103/Desktop/retrospect/front/sagas/user.js"],"names":["signUp","watchSignUp","logIn","watchLogin","userSaga","all","fork","put","takeEvery","call","axios","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","signUpAPI","signUpData","console","log","post","action","data","type","error","logInAPI","LoginData","withCredentials","result"],"mappings":";;;;yBAUUA,M;;;yBAgBAC,W;;;yBAWAC,K;;;yBAgBAC,U;;;yBAIeC,Q;;AAzDzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,EAAoCC,IAApC,QAAgD,oBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,eAA3C,EAA4DC,cAA5D,EAA4EC,cAA5E,EAA4FC,cAA5F,QAAkH,iBAAlH;;AAGA,SAASC,SAAT,CAAmBC,UAAnB,EAA+B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,SAAOR,KAAK,CAACW,IAAN,CAAW,cAAX,EAA2BH,UAA3B,CAAP;AACD;;AAED,SAAUlB,MAAV,CAAiBsB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIH,UAAAA,OAAO,CAACC,GAAR,CAAYE,MAAM,CAACC,IAAnB,EAAyB,aAAzB;AAFJ;AAGI,iBAAMd,IAAI,CAACQ,SAAD,EAAYK,MAAM,CAACC,IAAnB,CAAV;;AAHJ;AAAA;AAII,iBAAMhB,GAAG,CAAG;AAAE;AACZiB,YAAAA,IAAI,EAAEZ;AADI,WAAH,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOgB;AACZO,UAAAA,OAAO,CAACM,KAAR;AARJ;AASI,iBAAMlB,GAAG,CAAC;AACRiB,YAAAA,IAAI,EAAEX,eADE;AAERY,YAAAA,KAAK;AAFG,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUxB,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,SAAS,CAACG,eAAD,EAAkBX,MAAlB,CAAf;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,SAAS0B,QAAT,CAAkBC,SAAlB,EAA6B;AAC3B,SAAOjB,KAAK,CAACW,IAAN,CAAW,aAAX,EAA0BM,SAA1B,EAAqC;AAC1CC,IAAAA,eAAe,EAAE;AADyB,GAArC,CAAP;AAGD;;AAED,SAAU1B,KAAV,CAAgBoB,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMb,IAAI,CAACiB,QAAD,EAAWJ,MAAM,CAACC,IAAlB,CAAV;;AAFnB;AAEUM,UAAAA,MAFV;AAAA;AAGI,iBAAMtB,GAAG,CAAC;AACRiB,YAAAA,IAAI,EAAET,cADE;AAERQ,YAAAA,IAAI,EAAEM,MAAM,CAACN;AAFL,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIJ,UAAAA,OAAO,CAACM,KAAR;AARJ;AASI,iBAAMlB,GAAG,CAAC;AACRiB,YAAAA,IAAI,EAAER;AADE,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUb,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMK,SAAS,CAACM,cAAD,EAAiBZ,KAAjB,CAAf;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CACRC,IAAI,CAACH,UAAD,CADI,EAERG,IAAI,CAACL,WAAD,CAFI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducer/user'\r\n\r\n\r\nfunction signUpAPI(signUpData) {\r\n  console.log(signUpData);\r\n  return axios.post('/user/signup', signUpData);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    console.log(action.data, 'action.data');\r\n    yield call(signUpAPI, action.data);\r\n    yield put  ({ // put은 dispatch 동일\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (e) { // loginAPI 실패\r\n    console.error(e);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n\r\nfunction logInAPI(LoginData) {\r\n  return axios.post('/user/login', LoginData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch(e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\n\r\nfunction* watchLogin() {\r\n  yield takeEvery(LOG_IN_REQUEST, logIn)\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchSignUp),\r\n  ]);\r\n}"]},"metadata":{},"sourceType":"module"}