{"ast":null,"code":"import produce from 'immer';\nexport var inintialState = {\n  user: {\n    nick: null,\n    userId: null,\n    password: null\n  }\n};\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport var LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport var LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inintialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case SIGN_UP_REQUEST:\n        {\n          break;\n        }\n\n      case SIGN_UP_SUCCESS:\n        {\n          alert('회원가입에 성공하셨습니다.');\n          break;\n        }\n\n      case SIGN_UP_FAILURE:\n        {\n          alert(\"회원가입에 실패하였습니다.\");\n          break;\n        }\n\n      case LOG_IN_REQUEST:\n        {\n          break;\n        }\n\n      case LOG_IN_SUCCESS:\n        {\n          draft.user = action.data;\n          break;\n        }\n\n      case LOG_IN_FAILURE:\n        {\n          alert(\"로그인에 실패했습니다. ID와 비밀번호를 확인해주세요.\");\n          break;\n        }\n\n      case LOG_OUT_REQUEST:\n        {\n          break;\n        }\n\n      case LOG_OUT_SUCCESS:\n        {\n          draft.user = {\n            nick: null,\n            userId: null,\n            password: null\n          };\n        }\n\n      case LOAD_USER_REQUEST:\n        {\n          break;\n        }\n\n      case LOAD_USER_SUCCESS:\n        {\n          draft.user = action.data;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n  });\n});","map":{"version":3,"sources":["C:/Users/82103/Desktop/retrospect/front/reducer/user.js"],"names":["produce","inintialState","user","nick","userId","password","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","state","action","draft","type","alert","data"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,IAAMC,aAAa,GAAG;AAC3BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,IADF;AAEJC,IAAAA,MAAM,EAAE,IAFJ;AAGJC,IAAAA,QAAQ,EAAE;AAHN;AADqB,CAAtB;AAQP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAGP,gBAAe,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BjB,aAA0B;AAAA,MAAXkB,MAAW;AAChD,SAAOnB,OAAO,CAACkB,KAAD,EAAQ,UAACE,KAAD,EAAW;AAC/B,YAAQD,MAAM,CAACE,IAAf;AACE,WAAKf,eAAL;AAAsB;AACpB;AACD;;AACD,WAAKC,eAAL;AAAsB;AACpBe,UAAAA,KAAK,CAAC,gBAAD,CAAL;AACA;AACD;;AACD,WAAKd,eAAL;AAAsB;AACpBc,UAAAA,KAAK,CAAC,gBAAD,CAAL;AACA;AACD;;AACD,WAAKb,cAAL;AAAqB;AACnB;AACD;;AACD,WAAKC,cAAL;AAAqB;AACnBU,UAAAA,KAAK,CAAClB,IAAN,GAAaiB,MAAM,CAACI,IAApB;AACA;AACD;;AACD,WAAKZ,cAAL;AAAqB;AACnBW,UAAAA,KAAK,CAAC,gCAAD,CAAL;AACA;AACD;;AACD,WAAKP,eAAL;AAAsB;AACpB;AACD;;AACD,WAAKC,eAAL;AAAsB;AACpBI,UAAAA,KAAK,CAAClB,IAAN,GAAa;AAAEC,YAAAA,IAAI,EAAE,IAAR;AAAcC,YAAAA,MAAM,EAAE,IAAtB;AAA4BC,YAAAA,QAAQ,EAAE;AAAtC,WAAb;AACD;;AACD,WAAKO,iBAAL;AAAwB;AACtB;AACD;;AACD,WAAKC,iBAAL;AAAwB;AACtBO,UAAAA,KAAK,CAAClB,IAAN,GAAaiB,MAAM,CAACI,IAApB;AACD;;AACD;AAAS;AACP;AACD;AArCH;AAuCD,GAxCa,CAAd;AAyCD,CA1CD","sourcesContent":["import produce from 'immer'\r\n\r\nexport const inintialState = {\r\n  user: {\r\n    nick: null,\r\n    userId: null,\r\n    password: null\r\n  },\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\n\r\nexport default (state = inintialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case SIGN_UP_REQUEST: {\r\n        break;\r\n      }\r\n      case SIGN_UP_SUCCESS: {\r\n        alert('회원가입에 성공하셨습니다.');\r\n        break;\r\n      }\r\n      case SIGN_UP_FAILURE: {\r\n        alert(\"회원가입에 실패하였습니다.\");\r\n        break;\r\n      }\r\n      case LOG_IN_REQUEST: {\r\n        break;\r\n      }\r\n      case LOG_IN_SUCCESS: {\r\n        draft.user = action.data;\r\n        break\r\n      }\r\n      case LOG_IN_FAILURE: {\r\n        alert(\"로그인에 실패했습니다. ID와 비밀번호를 확인해주세요.\")\r\n        break;\r\n      }\r\n      case LOG_OUT_REQUEST: {\r\n        break;\r\n      }\r\n      case LOG_OUT_SUCCESS: {\r\n        draft.user = { nick: null, userId: null, password: null }\r\n      }\r\n      case LOAD_USER_REQUEST: {\r\n        break;\r\n      }\r\n      case LOAD_USER_SUCCESS: {\r\n        draft.user = action.data;\r\n      }\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}