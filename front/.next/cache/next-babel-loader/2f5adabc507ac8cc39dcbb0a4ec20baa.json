{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82103\\\\Desktop\\\\retrospect\\\\front\\\\components\\\\DateCell.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux'; //postsDate 2020-01-09\n//calendatCell 01 09 2020\n\nvar DateCell = function DateCell(_ref) {\n  var date = _ref.date;\n  var month = [\"None\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  var postsDate = mainPosts.map(function (v) {\n    return String(v.createdAt).substring(0, 10);\n  });\n  var calendarCell = String(date._d).substring(4, 15);\n  var index = 0;\n\n  for (var i = 0; i <= 12; i++) {\n    if (calendarCell.substring(0, 3) == month[i]) {\n      if (Number(month.indexOf(month[i])) < 10) {\n        index = '0' + month.indexOf(month[i]);\n      } else {\n        index = month.indexOf(month[i]);\n      }\n\n      calendarCell = calendarCell.replace(calendarCell.substring(0, 3), index);\n    }\n  }\n\n  for (var _i = 0; _i < postsDate.length; _i++) {\n    if (postsDate[_i].substring(0, 4) == calendarCell.substring(6, 10) && postsDate[_i].substring(5, 7) == calendarCell.substring(0, 2) && postsDate[_i].substring(8, 10) == calendarCell.substring(3, 5)) {\n      console.log(postsDate[_i].substring(0, 4), calendarCell.substring(6, 10));\n      console.log(postsDate[_i].substring(5, 7), calendarCell.substring(0, 2));\n      console.log(postsDate[_i].substring(8, 10), calendarCell.substring(3, 5));\n    }\n  }\n\n  return __jsx(React.Fragment, null, calendarCell ? __jsx(\"div\", {\n    style: {\n      backgroundColor: 'red',\n      width: '65px',\n      height: '3px',\n      marginTop: '0px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : null);\n};\n\nexport default DateCell;","map":{"version":3,"sources":["C:/Users/82103/Desktop/retrospect/front/components/DateCell.js"],"names":["React","useSelector","DateCell","date","month","state","post","mainPosts","postsDate","map","v","String","createdAt","substring","calendarCell","_d","index","i","Number","indexOf","replace","length","console","log","backgroundColor","width","height","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\n\r\n//postsDate 2020-01-09\r\n//calendatCell 01 09 2020\r\n\r\n\r\nconst DateCell = ({date}) => {\r\n\r\n  const month = [\"None\",\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\", \"Sep\",\"Oct\",\"Nov\",\"Dec\"];\r\n  const { mainPosts } = useSelector(state => state.post);\r\n  const postsDate = mainPosts.map(v => String(v.createdAt).substring(0,10));\r\n  let calendarCell = String(date._d).substring(4,15);\r\n  let index = 0\r\n\r\n  for(let i = 0; i <= 12; i++) {\r\n    if(calendarCell.substring(0,3) == month[i]) {\r\n      if (Number(month.indexOf(month[i])) < 10) {\r\n        index =  '0'+ month.indexOf(month[i])\r\n      } else {\r\n        index = month.indexOf(month[i])\r\n      }\r\n      calendarCell = calendarCell.replace(calendarCell.substring(0,3), index)\r\n    }\r\n  }\r\n  \r\n  \r\n  for(let i = 0; i < postsDate.length; i++) {\r\n    if (postsDate[i].substring(0,4) == calendarCell.substring(6,10) && postsDate[i].substring(5,7) == calendarCell.substring(0,2) && postsDate[i].substring(8,10) == calendarCell.substring(3,5) ) {\r\n      console.log(postsDate[i].substring(0,4), calendarCell.substring(6,10));\r\n      console.log(postsDate[i].substring(5,7), calendarCell.substring(0,2));\r\n      console.log(postsDate[i].substring(8,10), calendarCell.substring(3,5));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {calendarCell ?\r\n      <div style={{ backgroundColor:'red', width: '65px', height: '3px', marginTop: '0px'}}></div>\r\n      :\r\n      null\r\n      } \r\n    </>\r\n  )\r\n}\r\n\r\nexport default DateCell;"]},"metadata":{},"sourceType":"module"}