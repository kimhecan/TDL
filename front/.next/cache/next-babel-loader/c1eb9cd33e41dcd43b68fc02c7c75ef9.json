{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82103\\\\Desktop\\\\retrospect\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST, LOAD_POST_REQUEST } from '../reducer/post';\n\nconst useInput = (initValue = null) => {\n  const {\n    0: value,\n    1: setter\n  } = useState(initValue);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  }, []);\n  return [value, setter, handler];\n};\n\nconst PostForm = () => {\n  const [firstText, setFirstText, changeFirstText] = useInput('');\n  const [secondText, setSecondText, changeSecondText] = useInput('');\n  const [thridText, setThridText, changeThridText] = useInput('');\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  console.log(mainPosts);\n  const dispatch = useDispatch();\n\n  const onScroll = () => {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 100) {\n      dispatch({\n        type: LOAD_POST_REQUEST,\n        lastId: mainPosts[mainPosts.length - 1].id\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (mainPosts !== []) {\n      dispatch({\n        type: LOAD_POST_REQUEST\n      });\n    }\n  }, []);\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (!firstText || !secondText || !thridText) {\n      return alert('게시글을 작성하세요.');\n    }\n\n    const text = `º오늘 한 일 ${firstText} º문제점 ${secondText} º내일 할 일 ${thridText}`;\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: text\n    });\n    setFirstText('');\n    setSecondText('');\n    setThridText('');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      margin: '30px'\n    },\n    encType: \"multipart/form-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    value: firstText,\n    onChange: changeFirstText,\n    maxLength: 500,\n    placeholder: \"\\uC624\\uB298 \\uD55C \\uC77C(Facts (\\uC0AC\\uC2E4, \\uAC1D\\uAD00),Feelings (\\uB290\\uB08C, \\uC8FC\\uAD00),  Findings (\\uBC30\\uC6B4 \\uC810)) \",\n    style: {\n      height: '150px',\n      width: \"1000px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), __jsx(Input.TextArea, {\n    value: secondText,\n    onChange: changeSecondText,\n    maxLength: 500,\n    placeholder: \"\\uBB38\\uC81C\\uC810\",\n    style: {\n      height: '150px',\n      width: \"1000px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), __jsx(Input.TextArea, {\n    value: thridText,\n    onChange: changeThridText,\n    maxLength: 500,\n    placeholder: \"\\uB0B4\\uC77C \\uD560 \\uC77C\",\n    style: {\n      height: '150px',\n      width: \"1000px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      backgroundColor: '#00001a',\n      borderColor: '#00001a',\n      width: \"200px\",\n      marginLeft: \"390px\"\n    },\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"\\uBC1C\\uD589\")));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/82103/Desktop/retrospect/front/components/PostForm.js"],"names":["React","useState","useEffect","useCallback","Form","Input","Button","useDispatch","useSelector","ADD_POST_REQUEST","LOAD_POST_REQUEST","useInput","initValue","value","setter","handler","e","target","PostForm","firstText","setFirstText","changeFirstText","secondText","setSecondText","changeSecondText","thridText","setThridText","changeThridText","mainPosts","state","post","console","log","dispatch","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","addEventListener","removeEventListener","onSubmit","preventDefault","alert","text","data","margin","height","width","backgroundColor","borderColor","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { ADD_POST_REQUEST, LOAD_POST_REQUEST } from '../reducer/post'\r\n\r\nconst useInput = (initValue = null) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, setter, handler];\r\n};\r\n\r\n\r\nconst PostForm = () => {\r\n\r\n  const [firstText, setFirstText, changeFirstText] = useInput('');\r\n  const [secondText, setSecondText, changeSecondText] = useInput('');\r\n  const [thridText, setThridText,changeThridText] = useInput('');\r\n\r\n  const { mainPosts } = useSelector(state => state.post);\r\n  console.log(mainPosts);\r\n  \r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onScroll = () => {\r\n    if ( window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 100 ) {\r\n      dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        lastId: mainPosts[mainPosts.length - 1].id\r\n      })\r\n    }  \r\n  }\r\n\r\n  useEffect(() => {\r\n    if (mainPosts !== []) {\r\n      dispatch({\r\n        type: LOAD_POST_REQUEST\r\n      }) \r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll)\r\n    }\r\n  }, [mainPosts.length]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!firstText || !secondText || !thridText) {\r\n      return alert('게시글을 작성하세요.');\r\n    }\r\n    const text = `º오늘 한 일 ${firstText} º문제점 ${secondText} º내일 할 일 ${thridText}`;\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: text,\r\n    });\r\n    setFirstText('');\r\n    setSecondText('');\r\n    setThridText('');\r\n  }\r\n  return (\r\n    <>\r\n      <Form onSubmit={onSubmit} style={{ margin: '30px' }} encType=\"multipart/form-data\">\r\n        <Input.TextArea value={firstText}  onChange={changeFirstText} maxLength={500} placeholder=\"오늘 한 일(Facts (사실, 객관),Feelings (느낌, 주관),  Findings (배운 점)) \" style={{ height: '150px', width: \"1000px\"}} />\r\n        <Input.TextArea value={secondText} onChange={changeSecondText} maxLength={500} placeholder=\"문제점\" style={{ height: '150px', width: \"1000px\"}}/>\r\n        <Input.TextArea value={thridText} onChange={changeThridText} maxLength={500} placeholder=\"내일 할 일\" style={{ height: '150px', width: \"1000px\"}}/><br /><br />\r\n        <Button type=\"primary\" style={{ backgroundColor: '#00001a', borderColor: '#00001a', width: \"200px\", marginLeft: \"390px\" }} htmlType=\"submit\">발행</Button>\r\n      </Form>\r\n  </>\r\n  )\r\n}\r\n\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}