{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _readOnlyError from \"@babel/runtime-corejs2/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"C:\\\\Users\\\\82103\\\\Desktop\\\\retrospect\\\\front\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport withRedux from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport withReduxSaga from 'next-redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport AppLayout from '../components/AppLayout';\nimport reducer from '../reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport axios from 'axios';\n\nvar Restropect = function Restropect(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store;\n  return __jsx(React.Fragment, null, __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"restropect\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.25.3/antd.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), __jsx(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(Component, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }))));\n};\n\nRestropect.propTypes = {\n  Component: PropTypes.elementType,\n  store: PropTypes.object\n};\n\nRestropect.getIntialProps = function _callee(context) {\n  var ctx, Component, pageProps, state, cookie;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          ctx = context.ctx, Component = context.Component;\n          pageProps = {};\n          state = ctx.store.getState();\n          cookie = ctx.isServer ? ctx.req.headers.cookie : '';\n\n          if (ctx.isServer) {\n            axios.defaults.headers.Cookie = cookie;\n          }\n\n          if (!state.user.userId) {\n            context.store.dispatch({\n              type: LOAD_USER_REQUEST\n            });\n          }\n\n          if (!Component.getIntialProps) {\n            _context.next = 11;\n            break;\n          }\n\n          _readOnlyError(\"pageProps\");\n\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(Component.getIntialProps(ctx));\n\n        case 10:\n          pageProps = _context.sent;\n\n        case 11:\n          return _context.abrupt(\"return\", pageProps);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar configureStore = function configureStore(initialState) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var enhancer = compose(composeWithDevTools(applyMiddleware.apply(void 0, middlewares)));\n  var store = createStore(reducer, initialState, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(Restropect));","map":{"version":3,"sources":["C:/Users/82103/Desktop/retrospect/front/pages/_app.js"],"names":["React","Head","PropTypes","withRedux","applyMiddleware","compose","createStore","Provider","withReduxSaga","composeWithDevTools","AppLayout","reducer","createSagaMiddleware","rootSaga","axios","Restropect","Component","store","propTypes","elementType","object","getIntialProps","context","ctx","pageProps","state","getState","cookie","isServer","req","headers","defaults","Cookie","user","userId","dispatch","type","LOAD_USER_REQUEST","configureStore","initialState","sagaMiddleware","middlewares","enhancer","sagaTask","run"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\nimport PropTypes from 'prop-types';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport withReduxSaga from 'next-redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport AppLayout from '../components/AppLayout';\r\nimport reducer from '../reducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga  from '../sagas';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Restropect = ({ Component, store }) => {\r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n        <Head>\r\n          <title>restropect</title>\r\n          <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.25.3/antd.css\" />\r\n        </Head>\r\n        <AppLayout>\r\n          <Component />\r\n        </AppLayout>\r\n      </Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nRestropect.propTypes = {\r\n  Component: PropTypes.elementType,\r\n  store: PropTypes.object,\r\n};\r\n\r\n\r\nRestropect.getIntialProps = async (context) => {\r\n  const { ctx, Component } = context;\r\n  const pageProps = {};\r\n  const state = ctx.store.getState();\r\n  const cookie = ctx.isServer ? ctx.req.headers.cookie : '';\r\n  if (ctx.isServer) {\r\n    axios.defaults.headers.Cookie = cookie\r\n  }\r\n  if (!state.user.userId) {\r\n    context.store.dispatch({\r\n      type: LOAD_USER_REQUEST,\r\n    });\r\n  }\r\n  if (Component.getIntialProps) {\r\n    pageProps = await Component.getIntialProps(ctx);\r\n  }\r\n  return pageProps;\r\n}\r\n\r\nconst configureStore = (initialState) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware];\r\n  const enhancer = compose(composeWithDevTools(applyMiddleware(...middlewares)));\r\n  const store = createStore(reducer, initialState, enhancer);\r\n  store.sagaTask = sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n\r\n\r\nexport default withRedux(configureStore)(withReduxSaga(Restropect));"]},"metadata":{},"sourceType":"module"}