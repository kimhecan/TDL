{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const inintialState = {\n  user: {\n    nickName: null,\n    id: null,\n    password: null\n  }\n};\nexport const SIGN_UP = 'SIGN_UP';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const LOG_IN = 'LOG_IN'; // 액션의 이름\n\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\n\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport const LOG_OUT = 'LOG_OUT';\nexport const loginAction = data => {\n  return {\n    type: LOG_IN,\n    data\n  };\n};\nexport const signUpAction = data => {\n  return {\n    type: SIGN_UP,\n    data\n  };\n};\nexport default ((state = inintialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread({}, state, {\n          user: action.data\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread({}, state, {\n          user: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/82103/Desktop/retrospect/front/reducer/user.js"],"names":["inintialState","user","nickName","id","password","SIGN_UP","SIGN_UP_SUCCESS","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT","loginAction","data","type","signUpAction","state","action"],"mappings":";;;;;;;;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG;AAC3BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,IADN;AAEJC,IAAAA,EAAE,EAAE,IAFA;AAGJC,IAAAA,QAAQ,EAAE;AAHN;AADqB,CAAtB;AASP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AAChC,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;;AAChD,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;;AAChD,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAEN,MADD;AAELK,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,YAAY,GAAIF,IAAD,IAAU;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAER,OADD;AAELO,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,gBAAe,CAACG,KAAK,GAAGf,aAAT,EAAwBgB,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACH,IAAf;AACE,SAAKN,MAAL;AAAa;AACX,iCACKQ,KADL;AAEEd,UAAAA,IAAI,EAAEe,MAAM,CAACJ;AAFf;AAID;;AACD,SAAKP,OAAL;AAAc;AACZ,iCACKU,KADL;AAEEd,UAAAA,IAAI,EAAEe,MAAM,CAACJ;AAFf;AAID;;AACD;AAAS;AACP,iCACKG,KADL;AAGD;AAjBH;AAmBD,CApBD","sourcesContent":["export const inintialState = {\r\n  user: {\r\n    nickName: null,\r\n    id: null,\r\n    password: null\r\n    \r\n  }\r\n};\r\n\r\nexport const SIGN_UP = 'SIGN_UP';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const LOG_IN = 'LOG_IN'; // 액션의 이름\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\r\nexport const LOG_OUT = 'LOG_OUT';\r\n\r\nexport const loginAction = (data) => {\r\n  return {\r\n    type: LOG_IN,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const signUpAction = (data) => {\r\n  return {\r\n    type: SIGN_UP,\r\n    data,\r\n  };\r\n};\r\n\r\nexport default (state = inintialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN: {\r\n      return {\r\n        ...state,\r\n        user: action.data,\r\n      }\r\n    }\r\n    case SIGN_UP: {\r\n      return {\r\n        ...state,\r\n        user: action.data,\r\n      }\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}