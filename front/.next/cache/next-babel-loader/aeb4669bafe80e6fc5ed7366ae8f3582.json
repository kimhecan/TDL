{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\82103\\\\Desktop\\\\retrospect\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST, LOAD_POST_REQUEST } from '../reducer/post';\n\nvar useInput = function useInput() {\n  var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _useState = useState(initValue),\n      value = _useState[0],\n      setter = _useState[1];\n\n  var handler = useCallback(function (e) {\n    setter(e.target.value);\n  }, []);\n  return [value, setter, handler];\n};\n\nvar PostForm = function PostForm() {\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      firstText = _useInput2[0],\n      setFirstText = _useInput2[1],\n      changeFirstText = _useInput2[2];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 3),\n      secondText = _useInput4[0],\n      setSecondText = _useInput4[1],\n      changeSecondText = _useInput4[2];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 3),\n      thridText = _useInput6[0],\n      setThridText = _useInput6[1],\n      changeThridText = _useInput6[2];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  console.log(mainPosts);\n  var dispatch = useDispatch();\n\n  var onScroll = function onScroll() {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 100) {\n      dispatch({\n        type: LOAD_POST_REQUEST,\n        lastId: mainPosts[mainPosts.length - 1].id\n      });\n    }\n  };\n\n  useEffect(function () {\n    if (mainPosts !== []) {\n      dispatch({\n        type: LOAD_POST_REQUEST\n      });\n    }\n  }, []);\n  useEffect(function () {\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]);\n\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault();\n\n    if (!firstText || !secondText || !thridText) {\n      return alert('게시글을 작성하세요.');\n    }\n\n    var recentPostDate = mainPosts[0].createdAt.substring(0, 10).split('-').map(function (v) {\n      return Number(v);\n    });\n    var toDay = new Date().toLocaleDateString().split('-').map(function (v) {\n      return Number(v);\n    });\n\n    if (toDay[0] == recentPostDate[0] && toDay[1] == recentPostDate[1] && toDay[2] == recentPostDate[2]) {\n      return alert('이미 오늘 회고를 작성하셨습니다!');\n    }\n\n    var text = \"\\xBA\\uC624\\uB298 \\uD55C \\uC77C \".concat(firstText, \" \\xBA\\uBB38\\uC81C\\uC810 \").concat(secondText, \" \\xBA\\uB0B4\\uC77C \\uD560 \\uC77C \").concat(thridText);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: text\n    });\n    setFirstText('');\n    setSecondText('');\n    setThridText('');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      margin: '30px'\n    },\n    encType: \"multipart/form-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    value: firstText,\n    onChange: changeFirstText,\n    maxLength: 500,\n    placeholder: \"\\uC624\\uB298 \\uD55C \\uC77C(Facts (\\uC0AC\\uC2E4, \\uAC1D\\uAD00),Feelings (\\uB290\\uB08C, \\uC8FC\\uAD00),  Findings (\\uBC30\\uC6B4 \\uC810)) \",\n    style: {\n      height: '150px',\n      width: \"1000px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), __jsx(Input.TextArea, {\n    value: secondText,\n    onChange: changeSecondText,\n    maxLength: 500,\n    placeholder: \"\\uBB38\\uC81C\\uC810\",\n    style: {\n      height: '150px',\n      width: \"1000px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(Input.TextArea, {\n    value: thridText,\n    onChange: changeThridText,\n    maxLength: 500,\n    placeholder: \"\\uB0B4\\uC77C \\uD560 \\uC77C\",\n    style: {\n      height: '150px',\n      width: \"1000px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      backgroundColor: '#00001a',\n      borderColor: '#00001a',\n      width: \"200px\",\n      marginLeft: \"390px\"\n    },\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"\\uBC1C\\uD589\")));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/82103/Desktop/retrospect/front/components/PostForm.js"],"names":["React","useState","useEffect","useCallback","Form","Input","Button","useDispatch","useSelector","ADD_POST_REQUEST","LOAD_POST_REQUEST","useInput","initValue","value","setter","handler","e","target","PostForm","firstText","setFirstText","changeFirstText","secondText","setSecondText","changeSecondText","thridText","setThridText","changeThridText","state","post","mainPosts","console","log","dispatch","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","addEventListener","removeEventListener","onSubmit","preventDefault","alert","recentPostDate","createdAt","substring","split","map","v","Number","toDay","Date","toLocaleDateString","text","data","margin","height","width","backgroundColor","borderColor","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { ADD_POST_REQUEST, LOAD_POST_REQUEST } from '../reducer/post'\r\n\r\nconst useInput = (initValue = null) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, setter, handler];\r\n};\r\n\r\n\r\nconst PostForm = () => {\r\n\r\n  const [firstText, setFirstText, changeFirstText] = useInput('');\r\n  const [secondText, setSecondText, changeSecondText] = useInput('');\r\n  const [thridText, setThridText,changeThridText] = useInput('');\r\n\r\n  const { mainPosts } = useSelector(state => state.post);\r\n  console.log(mainPosts);\r\n  \r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onScroll = () => {\r\n    if ( window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 100 ) {\r\n      dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        lastId: mainPosts[mainPosts.length - 1].id\r\n      })\r\n    }  \r\n  }\r\n\r\n  useEffect(() => {\r\n    if (mainPosts !== []) {\r\n      dispatch({\r\n        type: LOAD_POST_REQUEST\r\n      }) \r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll)\r\n    }\r\n  }, [mainPosts.length]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!firstText || !secondText || !thridText) {\r\n      return alert('게시글을 작성하세요.');\r\n    }\r\n    const recentPostDate = mainPosts[0].createdAt.substring(0,10).split('-').map(v => Number(v));\r\n    const toDay = new Date().toLocaleDateString().split('-').map(v => Number(v));\r\n    if (toDay[0] == recentPostDate[0] && toDay[1] == recentPostDate[1] && toDay[2] == recentPostDate[2]) {\r\n      return alert('이미 오늘 회고를 작성하셨습니다!');\r\n    }\r\n    const text = `º오늘 한 일 ${firstText} º문제점 ${secondText} º내일 할 일 ${thridText}`;\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: text,\r\n    });\r\n    setFirstText('');\r\n    setSecondText('');\r\n    setThridText('');\r\n  }\r\n  return (\r\n    <>\r\n      <Form onSubmit={onSubmit} style={{ margin: '30px' }} encType=\"multipart/form-data\">\r\n        <Input.TextArea value={firstText}  onChange={changeFirstText} maxLength={500} placeholder=\"오늘 한 일(Facts (사실, 객관),Feelings (느낌, 주관),  Findings (배운 점)) \" style={{ height: '150px', width: \"1000px\"}} />\r\n        <Input.TextArea value={secondText} onChange={changeSecondText} maxLength={500} placeholder=\"문제점\" style={{ height: '150px', width: \"1000px\"}}/>\r\n        <Input.TextArea value={thridText} onChange={changeThridText} maxLength={500} placeholder=\"내일 할 일\" style={{ height: '150px', width: \"1000px\"}}/><br /><br />\r\n        <Button type=\"primary\" style={{ backgroundColor: '#00001a', borderColor: '#00001a', width: \"200px\", marginLeft: \"390px\" }} htmlType=\"submit\">발행</Button>\r\n      </Form>\r\n  </>\r\n  )\r\n}\r\n\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}