{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const initalState = {\n  mainPosts: [] // 화면에 보일 포스트들\n\n};\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport default ((state = initalState, action) => {\n  switch (action.type) {\n    case LOAD_MAIN_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_MAIN_POSTS_SUCCESS:\n      {\n        return {};\n      }\n\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: [action.data, ...state.mainPosts]\n        });\n      }\n  }\n});","map":{"version":3,"sources":["C:/Users/82103/Desktop/retrospect/front/reducer/post.js"],"names":["initalState","mainPosts","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","state","action","type","data"],"mappings":";;;;;;;;;;;;AAAA,OAAO,MAAMA,WAAW,GAAG;AACzBC,EAAAA,SAAS,EAAE,EADc,CACV;;AADU,CAApB;AAIP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AAGP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,gBAAe,CAACC,KAAK,GAAGX,WAAT,EAAsBY,MAAtB,KAAiC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,uBAAL;AAA8B;AAC5B,iCACKS,KADL;AAGD;;AACD,SAAKR,uBAAL;AAA8B;AAC5B,eAAO,EAAP;AAGD;;AACD,SAAKK,gBAAL;AAAuB;AACrB,iCACKG,KADL;AAGD;;AACD,SAAKF,gBAAL;AAAuB;AACrB,iCACKE,KADL;AAEEV,UAAAA,SAAS,EAAE,CAACW,MAAM,CAACE,IAAR,EAAc,GAAGH,KAAK,CAACV,SAAvB;AAFb;AAID;AArBH;AAuBD,CAxBD","sourcesContent":["export const initalState = {\r\n  mainPosts: [], // 화면에 보일 포스트들\r\n}\r\n\r\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\r\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\r\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\r\n\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport default (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_MAIN_POSTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n    case LOAD_MAIN_POSTS_SUCCESS: {\r\n      return {\r\n        \r\n      }\r\n    }\r\n    case ADD_POST_REQUEST: {\r\n      return {\r\n        ...state,\r\n      }\r\n    }\r\n    case ADD_POST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        mainPosts: [action.data, ...state.mainPosts],\r\n      }\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}